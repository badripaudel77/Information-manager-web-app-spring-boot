# will be used for local development
#config file
server.port = 8080

#with docker-compose these parameters will be ignored [overriden] as docker-compose.yml will have all the configurations required.
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/info_keeper_sb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

logging.level.org.springframework.web: DEBUG
logging.level.org.hibernate: ERROR

spring.devtools.restart.enabled=true

#enable file uploading
multipart.enabled=true 
#limit the file size to 10MB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


#properties to send the mail using spring boot

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=false

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=email 
spring.mail.password=password


# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Expose other endpoints for actuator
management.endpoints.web.exposure.include=*

#prometheus
# TODO: implement prometheus later.
management.endpoint.prometheus.enabled=true
#dev is the default value, APP_ENV_NAME can be passed to override.
# can be used to override during runtime as:
# mvn spring-boot:run "-Dspring-boot.run.arguments=--APP_ENV_NAME=prod"
app.env.name=${APP_ENV_NAME:dev}
