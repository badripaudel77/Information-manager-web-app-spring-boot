# https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-postgresql-service-containers
name: Github Action CI with Java, Maven, Spring Boot and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: info_keeper_sb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done
      - name: Maven Clean
        run: mvn clean

      - name: Run Tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: info_keeper_sb
        run: mvn test
      - name: Build with Maven
          run: mvn clean install

  build:
    runs-on: ubuntu-latest
    needs: test # It is dependent on the test job steps
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 18
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.jar
      - name: Run the App
        run: mvn spring-boot:run

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build and push docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: badripaudel77/info_keeper_github_action
          tags: latest_ga
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
